# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
PCH = src/spypch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-windows-x86_64/Spyen
TARGET = $(TARGETDIR)/Spyen.lib
OBJDIR = ../bin-int/Debug-windows-x86_64/Spyen
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_GL -DSP_DEBUG
INCLUDES += -Isrc -Ivendor/glew/include -Ivendor/glm -Ivendor/glfw/include -Ivendor/spdlog/include -Ivendor/vld/include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\Debug-windows-x86_64\Spyen\Spyen.lib\ (xcopy /Q /E /Y /I ..\bin\Debug-windows-x86_64\Spyen\Spyen.lib ..\bin\Debug-windows-x86_64\Spoiled > nul) ELSE (xcopy /Q /Y /I ..\bin\Debug-windows-x86_64\Spyen\Spyen.lib ..\bin\Debug-windows-x86_64\Spoiled > nul)
endef

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-windows-x86_64/Spyen
TARGET = $(TARGETDIR)/Spyen.lib
OBJDIR = ../bin-int/Release-windows-x86_64/Spyen
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_GL -DSP_RELEASE
INCLUDES += -Isrc -Ivendor/glew/include -Ivendor/glm -Ivendor/glfw/include -Ivendor/spdlog/include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\Release-windows-x86_64\Spyen\Spyen.lib\ (xcopy /Q /E /Y /I ..\bin\Release-windows-x86_64\Spyen\Spyen.lib ..\bin\Release-windows-x86_64\Spoiled > nul) ELSE (xcopy /Q /Y /I ..\bin\Release-windows-x86_64\Spyen\Spyen.lib ..\bin\Release-windows-x86_64\Spoiled > nul)
endef

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-windows-x86_64/Spyen
TARGET = $(TARGETDIR)/Spyen.lib
OBJDIR = ../bin-int/Dist-windows-x86_64/Spyen
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_GL -DSP_DIST
INCLUDES += -Isrc -Ivendor/glew/include -Ivendor/glm -Ivendor/glfw/include -Ivendor/spdlog/include
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\bin\Dist-windows-x86_64\Spyen\Spyen.lib\ (xcopy /Q /E /Y /I ..\bin\Dist-windows-x86_64\Spyen\Spyen.lib ..\bin\Dist-windows-x86_64\Spoiled > nul) ELSE (xcopy /Q /Y /I ..\bin\Dist-windows-x86_64\Spyen\Spyen.lib ..\bin\Dist-windows-x86_64\Spoiled > nul)
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/AssetManager.o
GENERATED += $(OBJDIR)/BufferElement.o
GENERATED += $(OBJDIR)/BufferLayout.o
GENERATED += $(OBJDIR)/DynamicGameObject.o
GENERATED += $(OBJDIR)/DynamicObjectRenderPass.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/IndexBuffer.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/StaticGameObject.o
GENERATED += $(OBJDIR)/StaticObjectRenderPass.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/VertexArray.o
GENERATED += $(OBJDIR)/VertexBuffer.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/spypch.o
GENERATED += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/AssetManager.o
OBJECTS += $(OBJDIR)/BufferElement.o
OBJECTS += $(OBJDIR)/BufferLayout.o
OBJECTS += $(OBJDIR)/DynamicGameObject.o
OBJECTS += $(OBJDIR)/DynamicObjectRenderPass.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/IndexBuffer.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/StaticGameObject.o
OBJECTS += $(OBJDIR)/StaticObjectRenderPass.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/VertexBuffer.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/spypch.o
OBJECTS += $(OBJDIR)/stb_image.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Spyen
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Spyen
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)


ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)

# --- înlocuire aici ---
# build pentru fiecare header un .gch
$(OBJDIR)/%.h.gch: $(SRCDIR)/%.h | prebuild
	@echo Building PCH for $<
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) \
	            -c $< \
	            -o $@ \
	            -MF "$(@:%.gch=%.d)"
# --- sfârşit înlocuire ---

$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
	…
else
$(OBJECTS): | prebuild
endif



# File Rules
# #############################################

$(OBJDIR)/AssetManager.o: src/AssetManager/AssetManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Application.o: src/Core/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Core/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/Entity/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DynamicGameObject.o: src/GameObjects/DynamicGameObject.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/StaticGameObject.o: src/GameObjects/StaticGameObject.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: src/Input/Input.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BufferElement.o: src/Renderer/BufferElement.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BufferLayout.o: src/Renderer/BufferLayout.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DynamicObjectRenderPass.o: src/Renderer/DynamicObjectRenderPass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IndexBuffer.o: src/Renderer/IndexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Renderer/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Renderer/Shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/StaticObjectRenderPass.o: src/Renderer/StaticObjectRenderPass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Renderer/Texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/Renderer/VertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexBuffer.o: src/Renderer/VertexBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: src/Renderer/stb_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/Scene/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Window/Window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spypch.o: src/spypch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif
