# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -Idependencies/spyen/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lSpyen.lib
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-windows-x86_64/Spoiled
TARGET = $(TARGETDIR)/Spoiled.exe
OBJDIR = ../bin-int/Debug-windows-x86_64/Spoiled
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -Ldependencies/spyen/lib -L/usr/lib64 -m64 /NODEFAULTLIB:MSVCRT
define PREBUILDCMDS
	@echo Running prebuild commands
	xcopy /Q /E /Y /I ..\bin\Debug-windows-x86_64\Spyen dependencies\spyen
	copy /B /Y ..\bin\Debug-windows-x86_64\Spyen\bin\Spyen.dll
endef

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-windows-x86_64/Spoiled
TARGET = $(TARGETDIR)/Spoiled.exe
OBJDIR = ../bin-int/Release-windows-x86_64/Spoiled
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -Ldependencies/spyen/lib -L/usr/lib64 -m64 -s
define PREBUILDCMDS
	@echo Running prebuild commands
	xcopy /Q /E /Y /I ..\bin\Release-windows-x86_64\Spyen dependencies\spyen
	copy /B /Y ..\bin\Release-windows-x86_64\Spyen\bin\Spyen.dll
endef

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-windows-x86_64/Spoiled
TARGET = $(TARGETDIR)/Spoiled.exe
OBJDIR = ../bin-int/Dist-windows-x86_64/Spoiled
DEFINES += -DSP_PLATFORM_WINDOWS -DSP_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 /utf-8
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 /utf-8
ALL_LDFLAGS += $(LDFLAGS) -Ldependencies/spyen/lib -L/usr/lib64 -m64 -s
define PREBUILDCMDS
	@echo Running prebuild commands
	xcopy /Q /E /Y /I ..\bin\Dist-windows-x86_64\Spyen dependencies\spyen
	copy /B /Y ..\bin\Dist-windows-x86_64\Spyen\bin\Spyen.dll
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/BoxEntity.o
GENERATED += $(OBJDIR)/ControlObject.o
GENERATED += $(OBJDIR)/TextObj.o
GENERATED += $(OBJDIR)/TileM.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/BoxEntity.o
OBJECTS += $(OBJDIR)/ControlObject.o
OBJECTS += $(OBJDIR)/TextObj.o
OBJECTS += $(OBJDIR)/TileM.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Spoiled
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Spoiled
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Application.o: src/Spoiled/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BoxEntity.o: src/Spoiled/BoxEntity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ControlObject.o: src/Spoiled/ControlObject.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TextObj.o: src/Spoiled/TextObj.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TileM.o: src/Spoiled/TileM.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif